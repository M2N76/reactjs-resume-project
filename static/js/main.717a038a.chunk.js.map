{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","sections/TitlesSection.js","sections/AboutSection.js","components/SkillCard.js","components/UpIcon.js","sections/SkillSection.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","className","Component","DownIcon","onClick","style","display","flexDirection","alignItems","justifyContent","marginBottom","transform","paddingRight","cursor","maxWidth","src","icon","TitlesSection","state","color","changeColor","setState","defaultColorClass","name","onMouseOver","onMouseLeave","data","title","subtitle","Object","keys","links","map","key","url","activeClass","to","spy","smooth","duration","onSetActive","handleSetActive","icons","down","AboutSection","section","items","p","content","offset","SkillCard","skill","img","UpIcon","paddingBottom","SkillSection","eachSkill","up","Header","test","theme","App","bind","triggerChildFunction","refs","child","changeBackColor","ref","salam","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.717a038a.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Fullpage.css'\n\nclass Fullpage extends Component {\n    render() {\n        const { children} = this.props\n        return(\n            <div className={`fullpage ${this.props.className || ''}`}>\n                {children}\n            </div>\n        )\n    }\n}\nexport default Fullpage;","import React,{Component} from \"react\";\n\nconst DownIcon = (props) => {\n    return(\n        <div\n        onClick={props.onClick}\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginBottom: \"-75px\",\n          transform: \"translateY(-75px)\",\n          paddingRight:\"130px\",\n          cursor: \"pointer\",\n        }}\n      >\n        <div\n          style={{\n            maxWidth: \"30px\",\n          }}\n        >\n          <img src={props.icon} />\n        </div>\n      </div>\n    )\n}\nexport default DownIcon;","import React, { Component, useContext } from \"react\";\nimport data from \"../data.json\";\nimport Fullpage from \"../components/Fullpage\";\nimport { SocialIcon } from \"react-social-icons\";\nimport DownIcon from \"../components/DownIcon\";\nimport { Link, Element } from \"react-scroll\";\n\n\nimport \"./TitlesSection.css\";\n\n\n\n\n\nclass TitlesSection extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      defaultColorClass: 'first'\n    }\n  }\n  state = {\n    color: \"white\",\n  };\n\n\n  changeBackColor(){\n    if (this.state.defaultColorClass === 'first'){\n      this.setState({defaultColorClass:\"first-zard\"})\n    }\n    else if (this.state.defaultColorClass === 'first-zard'){\n      this.setState({defaultColorClass:\"first\"})\n    }\n  }\n\n\n  changeColor = () => {\n    this.setState({\n      color: this.state.color === \"white\" ? \"yellow\" : \"white\",\n    });\n  };\n  render() {\n    return (\n      <div>\n        <Element name=\"test1\" className=\"element\"></Element>\n        <Fullpage className={this.state.defaultColorClass}>\n          <h1\n            className=\"title\"\n            style={{\n              color: this.state.color,\n            }}\n            onMouseOver={() => {\n              this.changeColor();\n            }}\n            onMouseLeave={() => {\n              this.changeColor();\n            }}\n          >\n            {data.title}\n          </h1>\n          <div>\n            <h2>{data.subtitle}</h2>\n          </div>\n          <div className=\"icons-wrapper\">\n            {Object.keys(data.links).map((key) => {\n              return (\n                <div className=\"icon\">\n                  <SocialIcon url={data.links[key]} />\n                </div>\n              );\n            })}\n          </div>\n        </Fullpage>\n        <Link\n          activeClass=\"active\"\n          to=\"test2\"\n          spy={true}\n          smooth={true}\n          // offset={50}\n          duration={500}\n          onSetActive={this.handleSetActive}\n        >\n          <DownIcon icon={data.icons.down} />\n        </Link>\n      </div>\n    );\n  }\n}\nexport default TitlesSection;\n","import React, { Component } from \"react\";\nimport data from \"../data.json\";\nimport Fullpage from \"../components/Fullpage\";\nimport DownIcon from \"../components/DownIcon\";\nimport { Link, Element } from \"react-scroll\";\n\nimport \"./AboutSection.css\";\n\nclass AboutSection extends Component {\n  render() {\n    return (\n      <div>\n        <Element name=\"test2\" className=\"element\"></Element>\n        <div>\n\n        \n<Fullpage className=\"second\">\n<h3>{data.section[0].title}</h3>\n<div>\n  {data.section[0].items.map((p) => {\n    return <p>{p.content}</p>;\n  })}\n</div>\n\n</Fullpage>\n\n<Link\nactiveClass=\"active\"\nto=\"test3\"\nspy={true}\nsmooth={true}\noffset={50}\nduration={500}\nonSetActive={this.handleSetActive}\n>\n<DownIcon\nicon={data.icons.down}\n\n/>\n</Link>\n\n</div>\n\n      </div>\n     \n    );\n  }\n}\nexport default AboutSection;\n","import React, { Component } from \"react\";\nimport \"./SkillCard.css\";\n\nclass SkillCard extends Component {\n  render() {\n    const { skill } = this.props;\n    return (\n      <div className=\"card\">\n          <img className=\"cardimg\" src={skill.content.img} />\n          <h4 className=\"cardtext\">{skill.content.title}</h4>\n      \n      </div>\n    );\n  }\n}\nexport default SkillCard;\n","import React,{Component} from \"react\";\n\nconst UpIcon = (props) => {\n    return(\n        <div\n        onClick={props.onClick}\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          marginBottom: \"-30px\",\n          transform: \"translateY(-5px)\",\n          paddingRight:\"130px\",\n          paddingBottom:0,\n          cursor: \"pointer\",\n        \n        }}\n      >\n        <div\n          style={{\n            maxWidth: \"30px\",\n          }}\n        >\n          <img src={props.icon} />\n        </div>\n      </div>\n    )\n}\nexport default UpIcon;","import React, { Component } from \"react\";\nimport data from \"../data.json\";\nimport Fullpage from \"../components/Fullpage\";\nimport SkillCard from \"../components/SkillCard\";\nimport UpIcon from \"../components/UpIcon\";\nimport { Link, Element } from \"react-scroll\";\n\nimport \"./SkillSection.css\";\n\nclass SkillSection extends Component {\n  render() {\n    return (\n      <div>\n        <Fullpage className=\"third\">\n          <h3>{data.section[1].title}</h3>\n          <div className=\"cards-wrapper\">\n            {data.section[1].items.map((eachSkill) => {\n              return <SkillCard skill={eachSkill} />;\n            })}\n          </div>\n        </Fullpage>\n\n        <Link\n          activeClass=\"active\"\n          to=\"test1\"\n          spy={true}\n          smooth={true}\n          duration={500}\n          onSetActive={this.handleSetActive}\n        >\n          <UpIcon\n            icon={data.icons.up}\n         \n          />\n        </Link>\n        <Element name=\"test3\" className=\"element\"></Element>\n      </div>\n    );\n  }\n}\nexport default SkillSection;\n","import React, { Component } from \"react\";\nimport data from \"../data.json\";\nimport { Link, Element } from \"react-scroll\";\n\nimport \"./Header.css\";\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  test() {\n    this.props.test();\n  }\n\n  render() {\n    return (\n      <div>\n        <header className=\"Header\">\n          <div>\n          <Link\n              className=\"LinkStyle\"\n              activeClass=\"active\"\n              to=\"test1\"\n              spy={true}\n              smooth={true}\n              \n              duration={500}\n              onSetActive={this.handleSetActive}\n            >\n              Introduction\n            </Link>\n            \n          <Link\n              className=\"LinkStyle\"\n              activeClass=\"active\"\n              to=\"test2\"\n              spy={true}\n              smooth={true}\n              duration={500}\n              onSetActive={this.handleSetActive}\n            >\n              About\n            </Link>\n\n          <Link\n              className=\"LinkStyle\"\n              activeClass=\"active\"\n              to=\"test3\"\n              spy={true}\n              smooth={true}\n              duration={500}\n              onSetActive={this.handleSetActive}\n            >\n              Skills\n            </Link>\n       \n          </div>\n          <div>\n            <span onClick={() => this.test()}>\n              <img className=\"themeStyle\" src={data.theme.img} />{\" \"}\n            </span>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\nexport default Header;\n","import React, { Component } from \"react\";\n\nimport TitlesSection from \"./sections/TitlesSection\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\nimport Header from \"./components/Header\";\nimport SnowStorm from \"react-snowstorm\";\n\n \n\nimport \"./App.css\";\n\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={}\n    this.test = this.test.bind(this)\n  };\n \n  test(){\n    \n    this.triggerChildFunction()\n  };\n\n\n\nsalam(){\n  \n}\n\ntriggerChildFunction(){\n  this.refs.child.changeBackColor();\n}\n  render(){\n    return(\n        <div className=\"App\">\n              <div>\n                \n              </div>\n              <Header test={this.test} />\n              \n              <TitlesSection ref=\"child\" test={this.salam}/>\n              <AboutSection />\n              <SkillSection />\n              <SnowStorm />\n          </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}